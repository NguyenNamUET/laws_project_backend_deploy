# Generated by Django 3.0.2 on 2020-01-14 19:54

# Generated by Django 3.0.2 on 2020-01-14 18:34
# Generated by Django 3.0.2 on 2020-01-14 16:22

# Generated by Django 3.0.2 on 2020-01-14 05:54
import pandas as pd
from django.db import migrations
import ast
from os import listdir
from os.path import isfile, join
from datetime import datetime


CSV_FILE_PATH = "localdata/data.csv"
RAW_TEXT_DIRECTORY_PATH = "localdata/data/"
RAW_TEXT_PATH_LIST = [f for f in listdir(RAW_TEXT_DIRECTORY_PATH) if isfile(join(RAW_TEXT_DIRECTORY_PATH, f))]
df = pd.read_csv(CSV_FILE_PATH)
url_list = [field for field in df['url'].tolist()]
tenvb_list = [field for field in df['Tên VB'].tolist()]
toanvan_list = [field for field in df['Toàn văn'].tolist()]


def str_to_dict(str):
    try:
        dict = ast.literal_eval(str)
        return dict
    except:
        return None


def populate_extractive_document(apps, schema_editor):
    ExtractiveDocument = apps.get_model('laws', 'ExtractiveDocument')
    thuoctinh_list = [str_to_dict(field) for field in df["Thuộc tính"].tolist()]

    for index, file in enumerate(df["Toàn văn"].tolist()):
        if file in RAW_TEXT_PATH_LIST:
            title = tenvb_list[index]
            url = url_list[index]
            if thuoctinh_list[index] is not None:
                law_type =thuoctinh_list[index]['Loại văn bản'][0]
                content = open(RAW_TEXT_DIRECTORY_PATH + toanvan_list[index], 'r').read()
                if len(thuoctinh_list[index]['Cơ quan ban hành/ Chức danh / Người ký']) == 3:
                    organization = thuoctinh_list[index]['Cơ quan ban hành/ Chức danh / Người ký'][0]
                else:
                    organization = None

                try:
                    enforced_date = datetime.strptime(thuoctinh_list[index]['Ngày đăng công báo'][0],'%d/%m/%Y').strftime("%Y-%m-%d")
                except:
                    enforced_date = None

                try:
                    expiry_date = datetime.strptime(thuoctinh_list[index]['Ngày hết hiệu lực'][0],'%d/%m/%Y').strftime("%Y-%m-%d")
                except:
                    expiry_date = None

                try:
                    effective_date = datetime.strptime(thuoctinh_list[index]['Ngày có hiệu lực'][0],'%d/%m/%Y').strftime("%Y-%m-%d")
                except:
                    effective_date = None

                try:
                    issued_date = datetime.strptime(thuoctinh_list[index]['Ngày ban hành'][0],'%d/%m/%Y').strftime("%Y-%m-%d")
                except:
                    issued_date = None

                if len(thuoctinh_list[index]['Cơ quan ban hành/ Chức danh / Người ký']) == 3:
                    signer = thuoctinh_list[index]['Cơ quan ban hành/ Chức danh / Người ký'][-1]
                else:
                    signer = None

                if thuoctinh_list[index]['Thông tin'][1].lower().find("còn") > 0:
                    is_over_due = 0
                else:
                    is_over_due = 1

                document = ExtractiveDocument.objects.get_or_create(title=title,
                                              content=content,
                                              signer=signer,
                                              type=law_type,
                                              organization=organization,
                                              url=url,
                                              issued_date=issued_date,
                                              expiry_date=expiry_date,
                                              effective_date=effective_date,
                                              enforced_date=enforced_date,
                                              is_over_due=is_over_due) #return tuple (object, created) created is Boolean
                document[0].save()
                #Một số văn bản không có thông tin về "Thuôc tính" ~300 văn bản

class Migration(migrations.Migration):

    dependencies = [
        ('laws', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(populate_extractive_document),
    ]


